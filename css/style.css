@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

html {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block;
}

/**
 * Str replace
 *
 * @param {string}  $string    String that you want to replace
 * @param {string}  $substr    String that is to be replaced by `$newsubstr`
 * @param {string}  $newsubstr String that replaces `$substr`
 * @param {number*} $all       Flag for replaceing all (1+) or not (0)
 * @return {string}
 */
/**
 * Map set
 *
 * @param 	Map 	$map 		The map to use
 * @param 	String 	$key 		The key to update
 * @param 	Mixed 	$value 		The new value
 * @return 	Map 			The new map
 */
/**
 * Get the column width in percent for the global or a specific context
 *
 * @param 	int 		$columns 					The number of columns to calculate
 * @param 	int 		$context : $gridle-columns-count 	 	The context to use
 * @return 	percentage 							The width in percent
 */
/**
 *  Get a state map
 *
 * @param 	string 		$name 		The name of the state to get
 * @return 	map 				A state map object
 */
/**
 * Check if a state exist :
 *
 * @param 	string 		$name 		The name of the state to check
 * @return 	Boolean 			true is exist
 */
/**
 * Get the media queries variables :
 *
 * @param 	int 		$index 	 	The media query indes
 * @param 	String 		$var 		The media query variable name
 * @return 	String|int 			The variable value
 */
/**
 * Get a variable
 *
 * @param 	String 		$varName 				The variable name
 * @param  	String 		$stateMap-or-stateName 	 	The state name or a map state value
 * @return 	Mixed 							The finded value
 */
/**
 * Set a variable in a state
 * @param 	Mixed $stateName-or-stateIndex 	The state name of state index
 * @param  	String $var                    		Variable name to assign
 * @param  	Mixed $newValue          		The new value to assign
 * @return 	List                         			The states list (full)
 */
/**
 * Generate a column
 *
 * @param 	String 		$name 			The column name (often count)
 * @param 	int 		$columns 		The column count that the column will take
 * @param 	int 		$context 		The context on witch the with will be calculed
 * @param 	Boolean 	$generateClasses 	Set if the column has to be generated in css
 */
/**
 * Generate classname
 *
 * @param 	List 		$parrern 	The pattern to use to generate classname
 * @param 	String 		$state 		The state
 * @param 	int 		$count 		The column count
 */
/**
 * Get the media query for a particular state, or with, etc...
 *
 * @param 	Mixed 		$state-or-min-width 		The state name of the min with
 * @param 	Mixed 		$max-width 			The max width if first param is a min width
 * @return 	String 						The media query string without the @media
 */
/**
 * Get states count
 * 
 * @return 	int 	The number of states defined
 */
/**
 * Setup
 */
/**
 *  Register a clear each class
 */
/**
 * Register a special class
 */
/**
 * Register default states
 */
/**
 * Register default mobile first states :
 */
/**
 * Set the debug device (not used for now)
 * 
 * @param 	String 		$state 		The state to update
 * @para m 	String 		$device 	The device to use (iphone, etc...)
 */
/**
 * Parent clear each
 */
/**
 * Vertical align :
 */
/**
 * Show inline
 *
 * @param 	String 		$state 		The state name
 */
/**
 * Generate a custom class for all the states
 *
 * @param 	list 	$pattern 		The name pattern of the class
 * @param 	list 	$statesNames 		The states names to generate
 */
* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  position: relative;
  font-size: 18px;
  font-family: OfficinaSansITCStd-Book;
  color: #555;
  line-height: 1.3;
}

a {
  color: #555;
}

button {
  font-family: OfficinaSansITCStd-Book;
}

header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background-color: #fff;
  padding: 30px 50px 0;
  z-index: 10;
}

footer {
  clear: both;
}

nav {
  padding: 1em 0;
  float: left;
}
nav ul {
  list-style: none;
}
nav ul li {
  display: inline-block;
  margin-right: 2.5em;
}
nav ul li:last-child {
  margin-right: 0;
}
nav ul li a {
  text-decoration: none;
}
nav.top-nav {
  float: right;
  font-size: 0.85em;
  padding-top: 1.5em;
}

.btn {
  background-color: #F3F3F3;
  padding: 0.2em 1em 0.1em;
  border: none;
}

.clear {
  clear: both;
}

.margin-top {
  margin-top: 4em !important;
}

.small-width {
  width: 600px;
}

.align-left {
  margin-left: 0;
}

.content-box {
  box-sizing: content-box;
  padding: 30px;
}

.wrap, .wrap--small, .wrap--600, .wrap--1200 {
  margin: auto;
  max-width: 900px;
  position: relative;
}
.wrap--small {
  max-width: 700px;
}
.wrap--600 {
  max-width: 600px;
}
.wrap--1200 {
  max-width: 1200px;
}

.bg-gray {
  background-color: #F3F3F3;
}

.background {
  position: relative;
  top: 0;
  left: 0;
  z-index: 1;
}

.fullwidth {
  width: 100%;
}

.absolute, .absolute--right {
  position: absolute;
  top: 0;
  z-index: 0;
}
.absolute--right {
  right: 0;
}

/* Responsive iFrame */
.responsive-iframe-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden;
}

.responsive-iframe-container iframe,
.vresponsive-iframe-container object,
.vresponsive-iframe-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

section {
  position: relative;
  padding: 50px;
  clear: both;
}
section#intro .carousel > div {
  position: relative;
}
section#intro .carousel img {
  width: 100%;
}
section#intro .carousel .text {
  position: absolute;
  top: 20%;
  right: 0;
  background-color: white;
  padding: 1.5em;
  font-size: 1.5em;
  width: 320px;
  padding-bottom: 4em;
}
section#intro .carousel .text img {
  width: auto;
  display: inline-block;
}
section#intro .carousel .text svg {
  -webkit-transform: scale(1.3);
      -ms-transform: scale(1.3);
          transform: scale(1.3);
}
section#story {
  background-size: cover;
}
section#story .step, section#story section#how .step--500, section#how section#story .step--500 {
  position: relative;
  height: 400px;
}
section#story .step__text {
  width: 60%;
}
section#story .step__image {
  position: absolute;
  top: -30px;
  margin-left: 63%;
}
section#story .product {
  height: 400px;
  position: relative;
}
section#story .product__text {
  position: absolute;
  top: 0;
  left: 50%;
  width: 50%;
  padding-right: 20px;
}
section#story .product__image {
  position: absolute;
  width: 60%;
  top: 0;
  left: 0;
  overflow: visible;
}
section#story .product__image img {
  position: relative;
  top: -60px;
}
section#story .stamp1 {
  position: absolute;
  right: 100px;
  -webkit-transform: translateY(-80%);
      -ms-transform: translateY(-80%);
          transform: translateY(-80%);
}
section#story .stamp2 {
  position: relative;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
}
section#stamp .step, section#stamp section#how .step--500, section#how section#stamp .step--500 {
  position: relative;
  height: 400px;
}
section#stamp .step__text {
  width: 60%;
}
section#stamp .step__image {
  position: absolute;
  top: -30px;
  margin-left: 63%;
}
section#stamp .product {
  height: 400px;
  position: relative;
}
section#stamp .product__text {
  position: absolute;
  top: 0;
  left: 50%;
  width: 50%;
  padding-right: 20px;
}
section#stamp .product__image {
  position: absolute;
  width: 60%;
  top: 0;
  left: 0;
  overflow: visible;
}
section#stamp .product__image img {
  position: relative;
  margin-left: -100px;
  top: -160px;
}
section#book p {
  margin-bottom: 1em;
}
section#how ol {
  text-align: center;
}
section#how .step, section#how .step--500 {
  position: relative;
}
section#how .step__text {
  max-width: 400px;
  margin: auto;
}
section#how .step--500 .step__text {
  max-width: 500px;
}
section#how .step--500 .step__image {
  left: 500px;
}
section#how .step.step-2 .step__image, section#how .step-2.step--500 .step__image {
  margin-top: 80px;
  margin-bottom: 80px;
}
section#price .price {
  margin-bottom: 3em;
}
section#price .price__item {
  width: 33.33%;
  text-align: center;
  float: left;
}
section#price .price__item .btn {
  margin-top: 1em;
}
section#price .logo-stamp {
  margin-top: 5em;
  float: left;
}
section#price .logo-stamp__text {
  width: 40%;
  float: left;
}
section#price .logo-stamp__image {
  overflow: visible;
  width: 60%;
  float: left;
}
section#price .price-include {
  max-width: 400px;
  text-align: center;
  margin: auto;
}
section#price .price-include img {
  width: 100%;
}
section#contact input, section#contact textarea {
  background: white;
  border: none;
  font-size: 0.8em;
  padding: 0.7em;
  margin-bottom: 1em;
}
section#about .about__text {
  width: 70%;
  padding-right: 1em;
  float: left;
}
section#about .about__text p {
  margin-bottom: 1em;
}
section#about .about__image {
  overflow: visible;
  width: 30%;
  float: left;
}
section#media .news {
  float: left;
  margin-bottom: 1em;
}
section#media .news__text {
  width: 50%;
  padding-right: 1em;
  float: left;
}
section#media .news__image {
  overflow: visible;
  width: 50%;
  float: left;
}

/*
#overview
Gulp入門サンプル

サンプルファイルです
*/
/*#styleguide
サンプル見出し１

サンプルの見出しスタイル
hoverすると青くなって10px動く
```
<h1>見出し１</h1>
```
*/
h1 {
  font-size: 20px;
  font-size: 20px;
  font-size: 1.3rem;
}
h1 span {
  font-size: 16px;
  font-size: 16px;
  font-size: 1rem;
  margin-left: 1em;
}

h2, .h2 {
  font-size: 1.3em;
  margin: 1em 0;
}

.h2 {
  margin-top: 0;
}

h2.heading {
  text-decoration: underline;
}
h2.heading:before {
  position: absolute;
  content: '';
  background: url(../images/icon.svg) no-repeat;
  background-size: contain;
  left: -50px;
  width: 30px;
  height: 25px;
}

h3, .h3 {
  font-size: 1.2em;
  margin: 1em 0;
}

.h3 {
  margin: 0;
}

@media screen and (max-width: 980px) {
  body {
    color: "#ccc";
  }
}
@media screen and (max-width: 980px) {
  h1 {
    color: "#ccc";
  }
}
